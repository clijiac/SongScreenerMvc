//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SongScreenerMvc.Models.Entity
{
    #pragma warning disable 1573
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Data.Common;
    using System.Data.Entity;
    using System.Data.Entity.ModelConfiguration;
    using System.Data.Entity.Infrastructure;
    
    internal partial class Song_Mapping : EntityTypeConfiguration<Song>
    {
        public Song_Mapping()
        {                        
              this.HasKey(t => t.SongID);        
              this.ToTable("Song");
              this.Property(t => t.SongID).HasColumnName("SongID");
              this.Property(t => t.SongName).HasColumnName("SongName").IsRequired().HasMaxLength(255);
              this.Property(t => t.SongArtistID).HasColumnName("SongArtistID");
              this.Property(t => t.SongLanguageID).HasColumnName("SongLanguageID");
              this.Property(t => t.SongGenreID).HasColumnName("SongGenreID");
              this.Property(t => t.SongIntonation).HasColumnName("SongIntonation");
              this.Property(t => t.SongTone).HasColumnName("SongTone");
              this.Property(t => t.SongRhythm).HasColumnName("SongRhythm");
              this.Property(t => t.SongPath).HasColumnName("SongPath").IsRequired().HasMaxLength(255);
              this.Property(t => t.SongExtensionID).HasColumnName("SongExtensionID");
              this.HasRequired(t => t.Artist).WithMany(t => t.Song).HasForeignKey(d => d.SongArtistID);
              this.HasRequired(t => t.Extension).WithMany(t => t.Song).HasForeignKey(d => d.SongExtensionID);
              this.HasRequired(t => t.Genre).WithMany(t => t.Song).HasForeignKey(d => d.SongGenreID);
              this.HasRequired(t => t.Language).WithMany(t => t.Song).HasForeignKey(d => d.SongLanguageID);
         }
    }
}

